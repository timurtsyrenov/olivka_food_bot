from datetime import datetime

import emoji
from aiogram import Router, types
from aiogram.filters import Command
from data.config import MIDDLEWARE_BAN
from database import set_custom_time_in_db
from utils import regenerate_scheduler
from utils.log_app import logger
from utils.misc import rate_limit

router = Router()


# C–æ–∑–¥–∞–µ–º message handler, –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /set_custom_time HH:MM
@rate_limit(limit=MIDDLEWARE_BAN)
@router.message(Command("/set_custom_time"))
async def set_custom_time(message: types.Message):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –º–µ–Ω—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
    :parameter message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å chat_id = {message.chat.id} –º–µ–Ω—è–µ—Ç –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏")
    try:
        time_str = message.text.split(" ")[1]
        hours, minutes = time_str.split(":")
        formatted_time = hours.zfill(2) + ":" + minutes
        try:
            datetime.strptime(time_str, "%H:%M")
            await set_custom_time_in_db(message.chat.id, formatted_time)
            await message.answer(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ {formatted_time}" + emoji.emojize(" ‚è≥"))
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å chat_id = {message.chat.id} —Å–º–µ–Ω–∏–ª –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞ {formatted_time}")
            await regenerate_scheduler()
        except ValueError:
            await message.answer("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /set_custom_time HH:MM" + emoji.emojize(" üôÖ‚Äç‚ôÇÔ∏è"))

    except (IndexError, ValueError):
        await message.answer("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /set_custom_time HH:MM" + emoji.emojize(" üôÖ‚Äç‚ôÇÔ∏è"))
